version: '3.5'
volumes:
  static:
    name: notify_static
  templates:
    name: notify_templates
  scheduler_exchange:
    name: notify_scheduler_exchange
  

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/nginx/site.conf:/etc/nginx/conf.d/site.conf:ro
      - /tmp/logs/nginx/:/var/log/nginx/
      - static:/app/static
    #  - media:/app/media
    ports:
      - "80:80"
      - "8000:80"
    depends_on:
      - admin-notify

  psql:
    build:
      context: ./deploy/psql
      dockerfile: Dockerfile
    image: postgres_notify:1.0
    container_name: ${NOTIFY_POSTGRES_HOST}
    environment:
      POSTGRES_DB: "${NOTIFY_POSTGRES_DB}"
      POSTGRES_USER: "${NOTIFY_POSTGRES_USER}"
      POSTGRES_PASSWORD: "${NOTIFY_POSTGRES_PASSWORD}"
    ports:
      - "5432:5432"
    volumes:
      - ./deploy/psql/:/docker-entrypoint-initdb.d/

  admin-notify:
    build:
      context: ./admin-notify
      dockerfile: Dockerfile
    image: admin-notify:1.0
    container_name: admin-notify
    env_file:
      - .env
    volumes:
      - static:/app/static
      - templates:/app/media/template
      - scheduler_exchange:/app/scheduler
    entrypoint: >
      sh -c "python manage.py createcachetable &&
             python manage.py collectstatic  --noinput &&
             gunicorn config.wsgi:application --bind 0.0.0.0:${ADMIN_NOTIFY_PORT}"
    expose:
      - ${ADMIN_NOTIFY_PORT}
    depends_on:
      - psql

  scheduler-worker:
    image: admin-notify:1.0
    container_name: scheduler-worker
    env_file:
      - .env
    volumes:
      - scheduler_exchange:/app/scheduler
    entrypoint: >
      sh -c "celery -A config worker --loglevel=info"
    expose:
      - ${SCHEDULER_WORKER_PORT}
    depends_on:
      - admin-notify
      
  scheduler-beat:
    image: admin-notify:1.0
    container_name: scheduler-beat
    env_file:
      - .env
    volumes:
      - scheduler_exchange:/app/scheduler
    entrypoint: >
      sh -c "celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    expose:
      - ${SCHEDULER_BEAT_PORT}
    depends_on:
      - admin-notify
      - scheduler-worker

  redis:
    image: redis:latest
    container_name: ${SCHEDULER_BROKER_REDIS_HOST}
    ports:
      - "6379:6379"

  notify-api:
    build: ./notify-api
    image: notify_api:1.0
    container_name: notify-api
    entrypoint: >
      sh -c "uvicorn main:app --host 0.0.0.0 --port $NOTIFY_API_PORT"
    expose:
      - ${NOTIFY_API_PORT}
    env_file:
      - ./.env
    depends_on:
      - psql

  rabbitmq:
    image: rabbitmq:latest
    container_name: ${NOTIFY_RABBITMQ_HOST}
    env_file:
      - ./.env
    ports:
      - "5672:5672"

  notify-worker:
    image: notify_api:1.0
    container_name: notify-worker
    env_file:
      - .env
    volumes:
      - templates:/app/src/templates
    entrypoint: >
      sh -c "celery -A app_celery worker --loglevel=info"
    expose:
      - ${NOTIFY_WORKER_PORT}
    depends_on:
      - rabbitmq
      - notify-api


networks:
  default:
    name: movies_networks  
    external: true